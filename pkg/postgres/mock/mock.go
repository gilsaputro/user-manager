// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\gilsp\go\src\aqua-farm-manager\pkg\postgres\postgres.go

// Package mock_postgres is a generated GoMock package.
package mock_postgres

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorm "github.com/jinzhu/gorm"
)

// MockPostgresMethod is a mock of PostgresMethod interface.
type MockPostgresMethod struct {
	ctrl     *gomock.Controller
	recorder *MockPostgresMethodMockRecorder
}

// MockPostgresMethodMockRecorder is the mock recorder for MockPostgresMethod.
type MockPostgresMethodMockRecorder struct {
	mock *MockPostgresMethod
}

// NewMockPostgresMethod creates a new mock instance.
func NewMockPostgresMethod(ctrl *gomock.Controller) *MockPostgresMethod {
	mock := &MockPostgresMethod{ctrl: ctrl}
	mock.recorder = &MockPostgresMethodMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostgresMethod) EXPECT() *MockPostgresMethodMockRecorder {
	return m.recorder
}

// GetDB mocks base method.
func (m *MockPostgresMethod) GetDB() *gorm.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDB")
	ret0, _ := ret[0].(*gorm.DB)
	return ret0
}

// GetDB indicates an expected call of GetDB.
func (mr *MockPostgresMethodMockRecorder) GetDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDB", reflect.TypeOf((*MockPostgresMethod)(nil).GetDB))
}
